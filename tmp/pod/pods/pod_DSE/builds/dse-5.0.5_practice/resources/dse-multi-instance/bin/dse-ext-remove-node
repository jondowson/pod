#!/bin/sh
#
#Copyright DataStax, Inc.
#Please see the included license file for details
#

#TITLE:Remove node from the DSE multi-instance server.

if [ -z "$BASH_VERSION" ]; then
    exec bash "$0" "$@"
    exit 1  # Will only get here if exec itself fails to run
fi

set -f

# Usage: dse remove-node ID

# For example, removing node3 from the server:
# dse remove-node node3
#
# Removing node3 without prompting for confirmation:
# dse remove-node node3 --yes

###
# You shouldn't need to change anything below here
###

show_help()
{
    echo "Usage: $0 ID [--yes] [--help]"
}

while :; do
    case $1 in
        -h|-\?|--help)
            show_help
            exit
            ;;

        --yes)
            DOIT=1
            shift;
            continue
            ;;
        -y)
            DOIT=1
            shift;
            continue
            ;;
        ?*)
            if [ -z $MAYBE_NODEID ]; then
                MAYBE_NODEID="$1"
            else
                echo "Unrecognized argument $1"
                exit 1
            fi
                ;;
        *)
            break
    esac

    shift
done

if [ -z $MAYBE_NODEID ]; then
    show_help
    echo

    echo "No node ID specified. Please specify one."

    exit 1;
fi

if [ $MAYBE_NODEID = "dse" ]; then
    echo "You're trying to delete the default node. Doing so will render your DSE install unusable. Exiting."
    exit 1
fi

# remove 'dse-' prefix, just to add it again. This means the script
# will accept node1, or dse-node1, as NODEID
NODEID="dse-`echo $MAYBE_NODEID | sed 's/^dse-//g'`"

# this only works with debian/rpm packages for the moment
if [ -z $ROOT_CONFIG ]; then
    ROOT_CONFIG=/etc
fi

SERVER_CONFIG=$ROOT_CONFIG/dse/serverconfig

if [ ! -f $SERVER_CONFIG/$NODEID ]; then
    echo "Node ${NODEID} does not exist."
    echo "Try one of:"
    echo `dse list-nodes`
    exit 0;
fi

if [ -z $DOIT ]; then
    echo "##############################"
    echo "#"
    echo "# WARNING"
    echo "# You're trying to remove node $NODEID"
    echo "# This means that all configuration files for $NODEID will be deleted"
    echo "#"
    echo "##############################"
    echo
    echo "Do you wish to continue?"
    select doit in "Yes" "No"; do
        case $doit in
            Yes ) DOIT=1; break;;
            No ) exit;;
        esac
    done
fi


if [ ! -z $DOIT ]; then
    # load defaults to see where the PIDFILE is
    . /etc/default/$NODEID

    service $NODEID stop

    echo "Deleting $SERVER_CONFIG/$NODEID"
    rm -rf $SERVER_CONFIG/$NODEID

    echo "Deleting $ROOT_CONFIG/$NODEID"
    rm -rf $ROOT_CONFIG/$NODEID

    echo "Deleting /etc/init.d/$NODEID"
    rm -rf /etc/init.d/$NODEID

    echo "Deleting /etc/default/$NODEID"
    rm -rf /etc/default/$NODEID

    echo "Deleting" `dirname $PIDFILE`
    rm -rf `dirname $PIDFILE`
fi
